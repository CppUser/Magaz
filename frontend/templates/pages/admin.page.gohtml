{{define "title"}}Admin Page{{end}}
{{define "styles"}}

    <link rel="stylesheet" href="/frontend/static/css/order.css">

        <style>
            /* Custom styles for button spacing */
            .btn-spacing {
                margin-right: 10px; /* Adjust margin as needed */
            }

            /* Other button styles */
            .btn-outline-primary, .btn-outline-danger {
                border-radius: 15px; /* Slightly smaller rounded corners */
                padding: 5px 10px; /* Reduced padding for smaller size */
                font-size: 0.875rem; /* Smaller font size */
                transition: all 0.3s ease; /* Smooth transition for hover effect */
            }

            .btn-outline-primary:hover, .btn-outline-danger:hover {
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Lighter shadow on hover */
                transform: translateY(-1px); /* Smaller lift effect */
            }

            .btn-outline-primary .bi, .btn-outline-danger .bi {
                font-size: 1rem; /* Adjusted icon size to match smaller button */
            }
        </style>
{{end}}

{{define "content"}}
    <main class="d-flex flex-nowrap">
        <!-- Navbar -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
            <div class="container-fluid">
                <span class="fs-4">Админ</span>

                <!-- Empty space to align items to the right -->
                <div class="me-auto"></div>

                <!-- Bell Icon -->
                <button class="btn btn-link" type="button">
                    <i class="bi bi-bell" style="font-size: 1.5rem;"></i> <!-- Bootstrap bell icon -->
                </button>
            </div>
        </nav>
        <!-- Sidebar -->
        <div class="sidebar d-flex flex-column flex-shrink-0 p-3 bg-body-tertiary" style="margin-top: 56px;">
            <hr>
            <ul class="nav nav-pills flex-column mb-auto">
                <li>
                    <a href="/statistics" class="nav-link link-body-emphasis" onclick="showSection('statistics'); return false;">
                        <svg class="bi pe-none me-2" width="16" height="16"><use xlink:href="#speedometer2"></use></svg>
                        Статистика
                    </a>
                </li>
                <li>
                    <a href="#" class="nav-link link-body-emphasis" onclick="showSection('orders'); return false;">
                        <svg class="bi pe-none me-2" width="16" height="16"><use xlink:href="#table"></use></svg>
                        Заказы
                    </a>
                </li>
                <li>
                    <a href="/api/admin/products/getProducts" class="nav-link link-body-emphasis" onclick="showSection('products'); return false;">
                        <svg class="bi pe-none me-2" width="16" height="16"><use xlink:href="#table"></use></svg>
                        Продукт
                    </a>
                </li>
                <li>
                    <a href="#" class="nav-link link-body-emphasis" onclick="showSection('settings'); return false;">
                        <svg class="bi pe-none me-2" width="16" height="16"><use xlink:href="#table"></use></svg>
                        Настройки
                    </a>
                </li>

            </ul>
            <hr>
        </div>
        <!-- Content Area -->
        <div class="content-area bg-body-tertiary " >

            <!-- Statistics Content -->
            <div id="statistics" class="content-section" style="display: none;">
                <h2>Statistics</h2>
                <p>Details about Statistics will go here.</p>


            </div>
            <!------------------->

            <!-- Orders Content -->
            <div id="orders" class="content-section" style="display: none;">
                <h2>Orders</h2>
                <p>Details about Orders will go here.</p>


            </div>
            <!------------------->

            <!-- Products Content -->
            <div id="products" class="content-section d-flex flex-column" style="display:block;">

                <!-- Add Product Button -->
                <div class="d-flex justify-content-between align-items-center mt-4">
                    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addProductModal">Add Product</button>

                </div>

                <!-- Add Product Modal -->
                <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <!-- City Dropdown and Input -->

                                <!-- TODO: Figure out why adding in dropdown is not working -->
{{/*                                <div class="mb-3">*/}}
{{/*                                    <label for="cityInput" class="form-label">City:</label>*/}}
{{/*                                    <div class="input-group">*/}}
{{/*                                        <select class="form-select" id="cityDropdown">*/}}
{{/*                                            {{range .CitiesWithProducts}}*/}}
{{/*                                                <option value="{{.City}}">{{.City}}</option>*/}}
{{/*                                            {{end}}*/}}
{{/*                                        </select>*/}}
{{/*                                        <button class="btn btn-outline-secondary" type="button" onclick="toggleCityInput()">+</button>*/}}
{{/*                                    </div>*/}}
{{/*                                    <input type="text" class="form-control mt-2" id="cityInput" placeholder="Enter city name" style="display:none;">*/}}
{{/*                                </div>*/}}

                                <div class="mb-3">
                                    <label for="cityInput" class="form-label">City:</label>
                                    <input type="text" class="form-control" id="cityInput" placeholder="Enter city name">
                                </div>

                                <!-- Product Dropdown and Input -->
                                <!-- TODO: Figure out why adding in dropdown is not working -->
{{/*                                <div class="mb-3">*/}}
{{/*                                    <label for="productInput" class="form-label">Product:</label>*/}}
{{/*                                    <div class="input-group">*/}}
{{/*                                        <select class="form-select" id="productDropdown">*/}}

{{/*                                            <!-- TODO: need to pass just products -->*/}}
{{/*                                            {{range .CitiesWithProducts}}*/}}
{{/*                                                {{range .Products}}*/}}
{{/*                                                    <option value="{{.Name}}">{{.Name}}</option>*/}}
{{/*                                                {{end}}*/}}
{{/*                                            {{end}}*/}}


{{/*                                        </select>*/}}
{{/*                                        <button class="btn btn-outline-secondary" type="button" onclick="toggleProductInput()">+</button>*/}}
{{/*                                    </div>*/}}
{{/*                                    <input type="text" class="form-control mt-2" id="productInput" placeholder="Enter product name" style="display:none;">*/}}
{{/*                                </div>*/}}


                                <div class="mb-3">
                                    <label for="productInput" class="form-label">Product:</label>
                                    <input type="text" class="form-control" id="productInput" placeholder="Enter product name">
                                </div>

                                <!-- Quantities and Prices Container -->
                                <div id="quantitiesContainer" class="mb-3">
                                    <h6>Quantities and Prices:</h6>
                                    <div class="input-group mb-3 quantity-price">
                                        <input type="number" class="form-control quantity" placeholder="Quantity">
                                        <input type="number" class="form-control price" placeholder="Price">
                                        <button class="btn btn-outline-secondary" onclick="removeQuantityPrice(this)">Remove</button>
                                    </div>
                                </div>

                                <!-- Button to Add More Quantities and Prices -->
                                <button class="btn btn-secondary mb-3" onclick="addQuantityPrice()">Add Another Quantity and Price</button>
                            </div>
                            <div class="modal-footer">
                                <!-- Close and Add Product Buttons -->
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" onclick="addProduct()">Add Product</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Product Item Modal -->
                <div class="modal fade" id="productItemModal" tabindex="-1" aria-labelledby="productItemModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="productItemModalLabel">Edit Product</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                <!-- Add button -->
                                <button type="button" class="btn btn-primary" onclick="toggleAddItemSection()" style="position: absolute; right: 15px;">Add</button>
                            </div>
                            <div class="modal-body">
                                <!-- Section for displaying items -->
                                <div id="displayItemsSection">
                                    <table class="table">
                                        <thead>
                                        <tr>
                                            <th>Информация</th>
                                            <th>Количество</th>
                                            <th>Дата</th>
                                            <th>Кем добавлен</th>
                                            <th>Image</th>
                                            <th>Действия</th>
                                        </tr>
                                        </thead>
                                        <tbody id="itemsTableBody">
                                        <!-- Dynamically populated rows will go here -->
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Section for adding new items -->
                                <div id="addItemSection" style="display: none;">
                                    <div class="mb-3">
                                        <label for="itemDescription" class="form-label">Description:</label>
                                        <input type="text" class="form-control" id="itemDescription" placeholder="Enter description">
                                    </div>
                                    <div class="mb-3">
                                        <label for="itemImage" class="form-label">Image:</label>
                                        <input type="file" class="form-control" id="itemImage">
                                    </div>
                                    <button type="button" class="btn btn-secondary" onclick="saveItem()">Save Item</button>
                                    <button type="button" class="btn btn-secondary" onclick="toggleAddItemSection()">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <!-- Products Display Section -->
                <div id="products-section" class="flex-grow-1 overflow-auto" style="height: calc(100vh - 150px);">
                    {{range .CitiesWithProducts}}
                        {{ $cityID := .CityID }}
                        <div class="city-section mt-4" style="margin-bottom: 100px;">
                            <h4 class="fw-bold mt-4">{{.City}}</h4>
                            {{range .Products}}
                                {{ $productID := .ProductID }}
                                <div class="d-flex justify-content-between align-items-center mt-4">
                                    <h5 class="fw-bold">{{.Name}}</h5>
                                    <span class="fw-bold" style="margin-right: 20px;">Total: {{.Total}}</span>
                                </div>
                                <table class="table-primary">
                                    <thead>
                                    <tr>
                                        <th scope="col">Qt</th>
                                        <th scope="col">Price</th>
                                        <th scope="col">Available</th>
                                        <th></th>
                                    </tr>
                                    </thead>
                                    <tbody class="table-group-divider">
                                    {{range .Items}}
                                        {{ $quantityID := .QuantityID }}
                                        <tr>
                                            <td>{{.Quantity}}</td>
                                            <td>{{.Price}}</td>
                                            <td>{{.AddrCnt}}</td>
                                            <td class="d-flex justify-content-end">
                                                <button class="btn btn-outline-primary btn-sm d-flex align-items-center btn-spacing"
                                                        data-city-id="{{ $cityID }}"
                                                        data-product-id="{{ $productID }}"
                                                        data-quantity-id="{{ $quantityID }}"
                                                        onclick="openProductItemModal(this)">
                                                    Адреса
                                                </button>

                                                <button class="btn btn-outline-primary btn-sm d-flex align-items-center btn-spacing">
                                                    <i class="bi bi-pencil me-1"></i>
                                                </button>
                                                <button class="btn btn-outline-danger btn-sm d-flex align-items-center">
                                                    <i class="bi bi-trash me-1"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    {{end}}
                                    </tbody>
                                </table>
                            {{end}}
                        </div>
                    {{end}}

                </div>
                <!------------------->

                <!-- Settings Content -->
                <div id="settings" class="content-section" style="display: none;">
                    <h2>Settings</h2>
                    <p>Details about settings will go here.</p>

                </div>
                <!------------------->
            </div>
        </div>
    </main>
{{end}}
{{define "scripts"}}
    <script src="/frontend/static/js/admin/products.js"></script>
    <script>
        function openProductItemModal(btn) { //TODO: must return lenght of the items to update availability


            // Read the data attributes from the button element
            const cityID = btn.getAttribute('data-city-id');
            const productID = btn.getAttribute('data-product-id');
            const quantityID = btn.getAttribute('data-quantity-id');

            console.log('City ID:', cityID);
            console.log('Product ID:', productID);
            console.log('Quantity ID:', quantityID);

            // Set up the modal with product-specific data if needed
            document.getElementById('productItemModalLabel').textContent = `Доступные адреса `;


            // Load items related to the specific product when opening the modal
            loadItems(cityID, productID, quantityID);

            // Show the modal
            const productItemModal = new bootstrap.Modal(document.getElementById('productItemModal'));
            productItemModal.show();
        }

        function editLocation(index) {
            alert("Edit location at index: " + index);
            // Add your edit logic here
        }

        function deleteLocation(index) {
            alert("Delete location at index: " + index);
            // Add your delete logic here
        }

        function toggleAddItemSection() {
            document.getElementById('displayItemsSection').style.display =
                document.getElementById('displayItemsSection').style.display === 'none' ? 'block' : 'none';
            document.getElementById('addItemSection').style.display =
                document.getElementById('addItemSection').style.display === 'none' ? 'block' : 'none';
        }

        function loadItems(cityID, productID, quantityID) {
            const url = `/api/admin/products/getProdAddr?cityID=${cityID}&productID=${productID}&quantityID=${quantityID}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const itemsTableBody = document.getElementById("itemsTableBody");
                    itemsTableBody.innerHTML = '';

                    data.items.forEach(item => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                <td>${item.Description}</td>
                <td>${item.Quantity}</td>
                <td>${new Date(item.AddedAt).toLocaleDateString()}</td>
                <td>${item.AddedBy}</td>
                <td><img src="${item.Image}" width="50" /></td>
                <td>
                    <button class="btn btn-primary" onclick="editItem(${item.ID})">Edit</button>
                    <button class="btn btn-danger" onclick="deleteItem(${item.ID})">Delete</button>
                </td>
            `;
                        itemsTableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Error fetching items:', error));
        }

        function saveItem() {
            const itemDescription = document.getElementById("itemDescription").value;
            const itemImage = document.getElementById("itemImage").files[0];

            // Simple validation
            if (!itemDescription || !itemImage) {
                alert("Please fill out all fields.");
                return;
            }

            // Create FormData object to send the item data to the server
            const formData = new FormData();
            formData.append('description', itemDescription);
            formData.append('image', itemImage);

            fetch('/api/admin/products/addItem', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        alert(data.error);
                    } else {
                        alert('Item added successfully!');
                        toggleAddItemSection();
                        loadItems(); // Reload items to display in the modal
                    }
                })
                .catch(error => console.error('Error:', error));
        }

    </script>
{{end}}
{{define "footer"}}
{{end}}

{{template "base" .}}